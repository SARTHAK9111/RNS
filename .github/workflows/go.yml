name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ['1.23']  # Forced version for consistency

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Tidy Dependencies
      run: go mod tidy
      working-directory: ./backend_system

    - name: Restore Go Dependencies
      run: go mod download
      working-directory: ./backend_system

    - name: Build
      run: go build -v ./...
      working-directory: ./backend_system

    - name: Run Tests with Coverage
      run: |
        go test -v -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out
      working-directory: ./backend_system

    - name: Upload Coverage and Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-and-tests
        path: backend_system/coverage.out

    - name: Run Linting
      run: golangci-lint run ./...
      working-directory: ./backend_system
      env:
        GOLANGCI_LINT_CACHE: ${{ runner.temp }}/golangci-lint
      continue-on-error: true  # Linting errors wonâ€™t block the build
